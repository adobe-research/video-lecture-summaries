 Okay, so why don't we take a look at some bit more famous bugs
 that kind of fit this basic flowchart.
 So let's talk about a bug that happened to the Mars Climate Orbiter.
 The Mars Climate Orbiter was sent off to Mars in 1998, and there were some miscommunications,
 let's say, between NASA and the people they contracted out to which was Lockheed Martin.
 And by the time the Mars Climate Orbiter actually got to Mars which was in 1999,
 quite a while later, there had been some problems that caused the orbiter to drift off course enough
  that it basically ran into a suicide mission and crashed into the Martian atmosphere
 and broke up and crashed in the planet.
 What happened was a basic unit error.
 See, NASA expected units in metric, for example--meters per second,
 and Lockheed Martin programmed in English units,
 for example--feet per second and neither of these are wrong.
 I mean there are both entirely valid ways to program a rocket and the underlying code
 was actually correct at least in terms of this bug didn't have anything to do with the underlying code.
 But because the NASA software was expecting units in meters per second,
 and the Lockheed Martin software was sending feet per second English units.
 That miscommunication caused its drift off that caused the Mars Climate Orbiter
 to crash into the Martian atmosphere and into the planet.
 So why don't we go ahead and turn this into a quiz.
 Is this a bug in the software under test that is the actual software of the Mars Climate Orbiter?
 Was it a bug in the acceptability test when they tested the actual software earlier on?
 Was there a bug in the specification, was there actually an underlying bug,
 and how they plan on operating the Mars Climate Orbiter?
 Or is there a bug in the underlying hardware or libraries
 or compiler or the operating system of the rocket?
 So go ahead and mark your answer here.
